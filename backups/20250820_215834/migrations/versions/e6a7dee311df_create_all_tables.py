"""Create all tables

Revision ID: e6a7dee311df
Revises: 8c816a3d6535
Create Date: 2025-08-20 17:40:49.085639

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e6a7dee311df'
down_revision = '8c816a3d6535'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('evaluation_system_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evaluation_period_days', sa.Integer(), nullable=True),
    sa.Column('engagement_weight_alpha', sa.Float(), nullable=True),
    sa.Column('weight_accuracy', sa.Float(), nullable=True),
    sa.Column('weight_time', sa.Float(), nullable=True),
    sa.Column('weight_progress', sa.Float(), nullable=True),
    sa.Column('weight_motivation', sa.Float(), nullable=True),
    sa.Column('min_threshold_low', sa.Float(), nullable=True),
    sa.Column('max_threshold_low', sa.Float(), nullable=True),
    sa.Column('min_threshold_medium', sa.Float(), nullable=True),
    sa.Column('max_threshold_medium', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('math_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('answer_type', sa.String(length=50), nullable=False),
    sa.Column('correct_answer', sa.JSON(), nullable=False),
    sa.Column('answer_schema', sa.JSON(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('max_score', sa.Float(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    with op.batch_alter_table('math_tasks', schema=None) as batch_op:
        batch_op.create_index('ix_math_tasks_topic_level', ['topic_id', 'level'], unique=False)

    op.create_table('student_evaluation_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('triggered_by', sa.Integer(), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['triggered_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('student_evaluation_runs', schema=None) as batch_op:
        batch_op.create_index('ix_eval_run_created_at', ['created_at'], unique=False)

    op.create_table('student_topic_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.String(length=10), nullable=False),
    sa.Column('is_mastered', sa.Boolean(), nullable=True),
    sa.Column('last_evaluated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'topic_id')
    )
    op.create_table('topic_level_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('task_count_threshold', sa.Integer(), nullable=False),
    sa.Column('reference_time', sa.Integer(), nullable=False),
    sa.Column('penalty_weights', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('topic_id', 'level', name='_topic_level_uc')
    )
    op.create_table('student_evaluation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evaluation_run_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('time_score', sa.Float(), nullable=True),
    sa.Column('avg_time', sa.Float(), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('motivation', sa.Float(), nullable=True),
    sa.Column('progress_score', sa.Float(), nullable=True),
    sa.Column('motivation_score', sa.Float(), nullable=True),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.Column('level_before', sa.String(length=10), nullable=True),
    sa.Column('level_after', sa.String(length=10), nullable=True),
    sa.Column('level_change', sa.String(length=10), nullable=True),
    sa.Column('tasks_total', sa.Integer(), nullable=True),
    sa.Column('tasks_solved', sa.Integer(), nullable=True),
    sa.Column('attempts_total', sa.Integer(), nullable=True),
    sa.Column('a1', sa.Integer(), nullable=True),
    sa.Column('a2', sa.Integer(), nullable=True),
    sa.Column('a3', sa.Integer(), nullable=True),
    sa.Column('calc_trace', sa.JSON(), nullable=True),
    sa.Column('decided_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evaluation_run_id'], ['student_evaluation_runs.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('evaluation_run_id', 'user_id', 'topic_id', name='uq_eval_run_user_topic')
    )
    with op.batch_alter_table('student_evaluation_logs', schema=None) as batch_op:
        batch_op.create_index('ix_eval_log_user_topic_decided', ['user_id', 'topic_id', 'decided_at'], unique=False)

    op.create_table('task_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_answer', sa.JSON(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('partial_score', sa.Float(), nullable=True),
    sa.Column('component_scores', sa.JSON(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('attempt_number', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['math_tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task_attempts', schema=None) as batch_op:
        batch_op.create_index('ix_attempts_task_created', ['task_id', 'created_at'], unique=False)
        batch_op.create_index('ix_attempts_user_created', ['user_id', 'created_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('task_attempts', schema=None) as batch_op:
        batch_op.drop_index('ix_attempts_user_created')
        batch_op.drop_index('ix_attempts_task_created')

    op.drop_table('task_attempts')
    with op.batch_alter_table('student_evaluation_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_eval_log_user_topic_decided')

    op.drop_table('student_evaluation_logs')
    op.drop_table('topic_level_configs')
    op.drop_table('student_topic_progress')
    with op.batch_alter_table('student_evaluation_runs', schema=None) as batch_op:
        batch_op.drop_index('ix_eval_run_created_at')

    op.drop_table('student_evaluation_runs')
    with op.batch_alter_table('math_tasks', schema=None) as batch_op:
        batch_op.drop_index('ix_math_tasks_topic_level')

    op.drop_table('math_tasks')
    op.drop_table('users')
    op.drop_table('topics')
    op.drop_table('evaluation_system_config')
    # ### end Alembic commands ###
