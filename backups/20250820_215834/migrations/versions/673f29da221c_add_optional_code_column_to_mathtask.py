"""Add optional code column to MathTask

Revision ID: 673f29da221c
Revises: 
Create Date: 2025-08-15 12:54:07.693656

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '673f29da221c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop legacy table only if it exists (older DBs may not have it)
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    if inspector.has_table('student_profiles'):
        op.drop_table('student_profiles')
    # Clean up any leftover temp table from a failed prior batch operation
    op.execute("DROP TABLE IF EXISTS _alembic_tmp_math_tasks")
    # Add column directly (SQLite supports ADD COLUMN)
    op.add_column('math_tasks', sa.Column('code', sa.String(length=64), nullable=True))
    # Create unique index instead of table-level constraint for SQLite compatibility
    op.create_index('uq_math_tasks_code', 'math_tasks', ['code'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_math_tasks_code', table_name='math_tasks')
    op.drop_column('math_tasks', 'code')

    op.create_table('student_profiles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('knowledge_level', sa.FLOAT(), nullable=True),
    sa.Column('learning_speed', sa.FLOAT(), nullable=True),
    sa.Column('motivation_level', sa.FLOAT(), nullable=True),
    sa.Column('attention_span', sa.FLOAT(), nullable=True),
    sa.Column('preferred_difficulty', sa.FLOAT(), nullable=True),
    sa.Column('efficiency_score', sa.FLOAT(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
